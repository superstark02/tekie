{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\super\\\\.vscode\\\\tekie\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\super\\\\.vscode\\\\tekie\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport GqlClient from \"./GqlClient\";\n\nvar handleGraphqlResponseErrors = function handleGraphqlResponseErrors(error) {\n  console.log(error);\n};\n\nvar client = new GqlClient({\n  url: \"https://api.spacex.land/graphql\",\n  errorHandler: handleGraphqlResponseErrors\n});\n\nvar requestToGraphql = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(query, variables) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", client.query(query, variables));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function requestToGraphql(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default requestToGraphql;","map":{"version":3,"sources":["C:/Users/super/.vscode/tekie/src/utils/request.js"],"names":["GqlClient","handleGraphqlResponseErrors","error","console","log","client","url","errorHandler","requestToGraphql","query","variables"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,aAAtB;;AAEA,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAAC,KAAK,EAAI;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,CAFD;;AAIA,IAAMG,MAAM,GAAG,IAAIL,SAAJ,CAAc;AAC3BM,EAAAA,GAAG,EAAE,iCADsB;AAE3BC,EAAAA,YAAY,EAAEN;AAFa,CAAd,CAAf;;AAIA,IAAMO,gBAAgB;AAAA,sEAAG,iBAAOC,KAAP,EAAcC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA,6CAChBL,MAAM,CAACI,KAAP,CAAaA,KAAb,EAAoBC,SAApB,CADgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBF,gBAAgB;AAAA;AAAA;AAAA,GAAtB;;AAIA,eAAeA,gBAAf","sourcesContent":["import GqlClient from \"./GqlClient\";\r\n\r\nconst handleGraphqlResponseErrors = error => {\r\n  console.log(error);\r\n};\r\n\r\nconst client = new GqlClient({\r\n  url: \"https://api.spacex.land/graphql\",\r\n  errorHandler: handleGraphqlResponseErrors\r\n});\r\nconst requestToGraphql = async (query, variables) => {\r\n  return client.query(query, variables);\r\n};\r\n\r\nexport default requestToGraphql;\r\n"]},"metadata":{},"sourceType":"module"}